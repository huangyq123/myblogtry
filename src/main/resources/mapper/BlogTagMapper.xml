<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.myblogtry.dao.BlogTagMapper">
    <resultMap id="baseTagMap" type="com.example.myblogtry.entity.BlogTag">
        <id property="tagId" column="tag_id"></id>
        <result property="tagName" column="tag_name"></result>
        <result property="createTime" column="create_time"></result>
        <result property="isDeleted" column="is_deleted"></result>
    </resultMap>

    <resultMap id="baseTagCountMap" type="com.example.myblogtry.entity.BlogTagCount">
        <id property="tagId" column="tag_id"></id>
        <result property="tagName" column="tag_name"></result>
        <result property="tagCount" column="tag_count"></result>
    </resultMap>

    <insert id="save" parameterType="com.example.myblogtry.entity.BlogTag">
        insert into tb_blog_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="tagName != null">
                tag_name,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="tagName != null">
                #{tagName,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="deleteTagsByPrimaryKeys" >
        update tb_blog_tag set is_deleted=1 where tag_id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="findTagList" resultMap="baseTagMap">
        select * from tb_blog_tag where is_deleted=0 limit #{start},#{limit}
    </select>

    <sql id="Base_Column_List">
        tag_id, tag_name, is_deleted, create_time
    </sql>
    <select id="findTagListByUtil" parameterType="Map" resultMap="baseTagMap">
        select
        <include refid="Base_Column_List"/>
        from tb_blog_tag
        where is_deleted=0
        order by tag_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="selectByName" resultMap="baseTagMap">
        select * from tb_blog_tag where is_deleted=0 and tag_name=#{tagName}
    </select>

    <select id="getTagCount" resultMap="baseTagCountMap">
        SELECT t_r.*,t.tag_name FROM
            (SELECT r.tag_id,r.tag_count FROM
                (SELECT tag_id ,COUNT(*) AS tag_count FROM
                    (SELECT tr.tag_id FROM tb_blog_tag_relation tr LEFT JOIN tb_blog b ON tr.blog_id = b.blog_id WHERE b.is_deleted=0)
                        trb GROUP BY tag_id) r ORDER BY tag_count DESC LIMIT 20 ) AS t_r LEFT JOIN tb_blog_tag t ON t_r.tag_id = t.tag_id WHERE t.is_deleted=0
    </select>

</mapper>